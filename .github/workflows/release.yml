name: Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request: {}
  release:
    types: [published]

env:
  COLUMNS: 150

jobs:
  build-sdist:
    name: Build Source Distribution (sdist)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          rust-toolchain: stable
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  build-wheels:
    name: Build Wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheel with maturin
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist --find-interpreter
          rust-toolchain: stable
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py3.x
          path: dist

  publish:
    name: Publish to PyPI
    needs: [build-sdist, build-wheels]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: '*'
          path: dist

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install twine
        run: pip install twine

      - name: Check distribution files
        run: twine check dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_token }}
        run: twine upload dist/*

